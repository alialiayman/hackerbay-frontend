{"version":3,"sources":["helpers/core.js","components/enemy.png","components/player.png","components/Square.js","components/Board.js","App.js","index.js"],"names":["random","maxNum","Math","round","module","exports","createBoard","rows","columns","playerLocation","row","column","occupiedLocations","Map","playerSquare","boardSquares","size","newValue","has","set","elements","i","j","push","hasEnemy","totalMoves","Square","board","console","log","length","state","find","e","className","src","enemy","alt","player","Board","useState","model","setModel","moveHandler","direction","a","alert","divs","document","onkeydown","keyCode","App","prompt","Fragment","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.482b07c9.chunk.js","sourcesContent":["const createBoard = (rows, columns) => {\n\n    const playerRow = Math.round(rows / 2);\n    const playerColumn = Math.round(columns / 2);\n    const playerLocation = { row: playerRow, column: playerColumn };\n\n    let occupiedLocations = new Map();\n    const playerSquare = playerLocation.row * columns + playerLocation.column;\n    const boardSquares = rows * columns;\n\n    // Generate unique random numbers between 0 and rows * columns\n    while (occupiedLocations.size < rows) {\n        const newValue = random(boardSquares);\n        if (!occupiedLocations.has(newValue) && newValue !== playerSquare) {\n            occupiedLocations.set(newValue);\n        }\n    }\n\n    const elements = [];\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < columns; j++) {\n            if (occupiedLocations.has(i * columns + j)) {\n                elements.push({ row: i, column: j, hasEnemy: true });\n            } else {\n                elements.push({ row: i, column: j, hasEnemy: false });\n            }\n        }\n    };\n\n    return {\n        elements,\n        rows,\n        columns,\n        playerLocation,\n        totalMoves: 0,\n\n    };\n};\n\nconst random = (maxNum) => {\n    return Math.round(Math.random() * maxNum);\n}\n\nmodule.exports = { createBoard };","module.exports = __webpack_public_path__ + \"static/media/enemy.f93856b4.png\";","module.exports = __webpack_public_path__ + \"static/media/player.cfe2ab6a.png\";","import React from 'react';\nimport './Square.scss';\nimport enemy from './enemy.png';\nimport player from './player.png';\n\nconst Square = ({ row, column, board }) => {\n\n    console.log(board);\n    if (!board || board.elements.length === 0) return null;\n    const hasEnemy = board.elements.find(e => e.row === row && e.column === column).hasEnemy;\n    let state = 0; // 0: empty, 1 hasEnemy, 2 hasPlayer\n    if (hasEnemy) {\n        state = 1;\n    };\n\n    if (board.playerLocation.row === row && board.playerLocation.column === column) {\n        state = 2;\n    }\n\n    if (state === 0) {\n        return <div className=\"container\">\n\n        </div>\n    } else if (state === 1) {\n        return <div className=\"container\">\n            <div className=\"square\">\n                <img src={enemy} alt=\"enemy\"></img>\n            </div>\n        </div>\n    } else {\n        return <div className=\"container\">\n            <div className=\"square\">\n                <img src={player} alt=\"player\"></img>\n            </div>\n        </div>\n    }\n}\n\n\nexport default Square;","import React, { useState } from 'react';\nimport Square from './Square';\nimport { createBoard } from '../helpers/core';\n\nconst Board = ({ rows, columns }) => {\n\n    const [model, setModel] = useState(createBoard(rows, columns));\n\n    const moveHandler = (direction) => {\n        if (direction === 1) {\n            if (model.playerLocation.row > 0) { model.playerLocation.row--; }\n        } else if (direction === 2) {\n            if (model.playerLocation.row < model.rows - 1) { model.playerLocation.row++; }\n        } else if (direction === 3) {\n            if (model.playerLocation.column > 0) { model.playerLocation.column--; }\n        } else if (direction === 4) {\n            if (model.playerLocation.column < model.columns - 1) { model.playerLocation.column++ }\n        }\n\n        const enemy = model.elements.find(a => a.row === model.playerLocation.row && a.column === model.playerLocation.column);\n        if (enemy) {\n            enemy.hasEnemy = false;\n        }\n        model.totalMoves++;\n        setModel({ ...model });\n        if (!model.elements.find(a => a.hasEnemy)){\n            alert('Game over. Total moves to save princess: ' + model.totalMoves);\n            setModel(createBoard(rows, columns));\n        }\n    }\n\n    let divs = [];\n    for (let i = 0; i < model.rows; i++) {\n        for (let j = 0; j < model.columns; j++) {\n            divs.push(<Square row={i} column={j} board={model}></Square>);\n        }\n        divs.push(<br></br>);\n    }\n\n    document.onkeydown = function (e) {\n        switch (e.keyCode) {\n            case 37:\n                moveHandler(3);\n                break;\n            case 38:\n                moveHandler(1);\n                break;\n            case 39:\n                moveHandler(4);\n                break;\n            case 40:\n                moveHandler(2);\n                break;\n            default:\n                break;\n        }\n    };\n    return divs;\n\n}\n\nexport default Board;","import React from 'react';\nimport Board from './components/Board';\n\nimport './App.scss';\n\nfunction App() {\n  const columns = prompt('Please enter board width');\n  const rows = prompt('Please enter board height');\n  return (\n    <React.Fragment>\n      <Board rows={rows} columns={columns}></Board>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}